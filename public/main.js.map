{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface TreasureMap {\n  width: number;\n  height: number;\n  matrix: CellData[][];\n}\n\nexport interface CellData {\n  type: 'Treasure' | 'Player' | 'Mountain' | 'Grass' | 'Treasure&Player' | 'WasPlayer';\n  x: number;\n  y: number;\n  orientation?: number;\n  sequence?: string;\n  name?: string;\n  treasureCount: number;\n  playerValue: number;\n  lastPlayerName?: number;\n  stepCount?: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  apiUrl = 'http://127.0.0.1:3000/';\n\n  constructor(private http: HttpClient) {\n    console.log('postFile error');\n  }\n  /**\n   * Post a file and returns transformed file data\n   * @argument {File} file\n   * @returns {status: boolean, message: string, newFileUrl: string, map: TreasureMap, newMap: TreasureMap} response\n   */\n  postFile(file: File): Observable<any> {\n    let formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<any>(this.apiUrl + 'upload-file', formData).pipe(\n      catchError((error) => {\n        console.log('postFile error', error);\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { CellData, DataService, TreasureMap } from './services/data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  newFileUrl: string = '';\n  map!: TreasureMap;\n  newMap!: TreasureMap;\n  hoveredCell!: CellData;\n\n  description = {\n    treasure: 'Un aventurier doit passer sur la case pour le ramasser !',\n    mountain: 'Les montagnes ne sont pas franchissables',\n    player: \"C'est un aventurier\",\n    grass: \"C'est de l'herbe\",\n    wasPlayer: \"Un aventurier est passé par là\",\n  };\n  error = false;\n\n  constructor(private ds: DataService) {}\n\n  get hoveredCellEntries() {\n    return Object.entries(this.hoveredCell)\n  }\n\n  postFile(event: Event) {\n    let files = (event.target as HTMLInputElement).files;\n    if (files) {\n      this.ds.postFile(files[0]).subscribe((response) => {\n        this.newFileUrl = response.newFileUrl;\n        this.error = !response.status;\n        this.map = response.map;\n        this.newMap = response.newMap;\n      });\n    }\n    // Reset input value\n    (event.target as HTMLInputElement).value = '';\n  }\n}\n","<div class=\"container\">\n  <h2 class=\"title\">Carte aux trésors</h2>\n\n  <div class=\"map-info-container\">\n    <div class=\"info\">\n      <div *ngIf=\"!map && !error\">\n        Chargez un fichier pour pouvoir visualiser sa carte aux trésors !\n      </div>\n      <div class=\"error\" *ngIf=\"error\">\n        Attention, le format du fichier envoyé n'est pas bon.\n      </div>\n      <div *ngIf=\"map && !error\">\n        <div>Informations sur la case :</div>\n        <div *ngIf=\"!hoveredCell\">\n          Survolez une case pour afficher ses informations\n        </div>\n        <div *ngIf=\"hoveredCell\">\n          <div *ngIf=\"hoveredCell.type === 'Treasure'\">\n            {{ description.treasure }}\n          </div>\n          <div *ngIf=\"hoveredCell.type === 'Mountain'\">\n            {{ description.mountain }}\n          </div>\n          <div *ngIf=\"hoveredCell.type === 'Player'\">\n            {{ description.player }}\n          </div>\n          <div *ngIf=\"hoveredCell.type === 'Grass'\">\n            {{ description.grass }}\n          </div>\n          <div *ngIf=\"hoveredCell.type === 'WasPlayer'\">\n            {{ description.wasPlayer }}\n          </div>\n          <div *ngFor=\"let item of hoveredCellEntries\">\n            {{ item[0] }}: {{ item[1] }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <app-map\n    *ngIf=\"map\" [title]=\"'Avant'\" [map]=\"map\" (hoveredCellEvent)=\"hoveredCell = $event\"></app-map>\n    <app-map\n      *ngIf=\"newMap\" [title]=\"'Après'\"\n      [map]=\"newMap\"\n      (hoveredCellEvent)=\"hoveredCell = $event\"\n    ></app-map>\n  </div>\n  <div class=\"actions\">\n    <label id=\"load\">\n      <input type=\"file\" accept=\".txt\" (input)=\"postFile($event)\" />\n      Charger un fichier\n    </label>\n    <a\n      id=\"save\"\n      [href]=\"newFileUrl\"\n      download\n      [ngClass]=\"{ disabled: newFileUrl === '' }\"\n    >\n      Télécharger la nouvelle carte\n    </a>\n  </div>\n  <!-- TODO: régler le problème de background -->\n  <div class=\"copyright\">\n    Icons made by\n    <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\"\n      >Smashicons</a\n    >\n    & <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a>\n    from\n    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent, MapComponent],\n  imports: [BrowserModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { TreasureMap, CellData } from '../services/data.service';\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n})\nexport class MapComponent implements OnInit {\n  @Output() hoveredCellEvent = new EventEmitter<CellData>();\n\n  private _map!: TreasureMap;\n\n  @Input() set map(value: TreasureMap) {\n    this._map = value;\n  }\n  get map(): TreasureMap {\n    return this._map;\n  }\n\n  @Input() title!: string;\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n  emitHoveredCell(cell: CellData) {\n    this.hoveredCellEvent.emit(cell);\n  }\n\n  /**\n   * Set a value in the map at certain coordinates\n   * @param x Horizontal coordinate from 1 to map width\n   * @param y Vertical coordinate from 1 to map height\n   * @param value Value to be displayed in the map\n   */\n  setCell(cell: CellData) {\n    if (\n      cell.x > 0 &&\n      cell.x <= this.map.matrix.length &&\n      cell.y <= this.map.matrix[0].length &&\n      cell.y > 0\n    ) {\n      this.map.matrix[cell.y - 1][cell.x - 1] = cell;\n    }\n  }\n}\n","<table *ngIf=\"map\">\n  <tr *ngFor=\"let row of map.matrix\">\n    <td\n      *ngFor=\"let cell of row\"\n      (mouseover)=\"emitHoveredCell(cell)\"\n      (click)=\"emitHoveredCell(cell)\"\n    >\n      <img src=\"../../assets/treasure.svg\" *ngIf=\"cell.type === 'Treasure' || cell.type === 'Treasure&Player'\" />\n      <img src=\"../../assets/mountain.svg\" *ngIf=\"cell.type === 'Mountain'\" />\n      <img\n        [ngStyle]=\"{\n          transform: 'translate(-50%, -50%) rotate(' + cell.orientation + 'deg)'\n        }\"\n        src=\"../../assets/traveler.svg\"\n        *ngIf=\"cell.type === 'Player' || cell.type === 'Treasure&Player'\"\n      />\n      \n      <div\n        class=\"treasure-value\"\n        *ngIf=\"cell.type === 'Treasure' || cell.type === 'Treasure&Player'\"\n        [ngStyle]=\"{ display: cell.treasureCount > 0 ? 'block' : 'none' }\"\n      >\n        {{ cell.treasureCount }}\n      </div>\n      <div\n        class=\"player-value\"\n        *ngIf=\"cell.type === 'Player' || cell.type === 'Treasure&Player'\"\n        [ngStyle]=\"{ display: cell.playerValue > 0 ? 'block' : 'none' }\"\n      >\n        {{ cell.playerValue }}\n      </div>\n\n      <div class=\"was-player player-name\" *ngIf=\"cell.type === 'WasPlayer'\">\n        ({{ cell.stepCount }})\n      </div>\n      <div class=\"player-name\" *ngIf=\"cell.type === 'WasPlayer'\">\n        {{ cell.lastPlayerName }}\n      </div>\n      <div\n        class=\"player-name\"\n        *ngIf=\"cell.type === 'Player' || cell.type === 'Treasure&Player'\"\n      >\n        {{ cell.name }}\n      </div>\n    </td>\n  </tr>\n  <div class=\"north\">N</div>\n  <div class=\"east\">E</div>\n  <div class=\"south\">S</div>\n  <div class=\"west\">W</div>\n\n  <div class=\"title\">{{ title }}</div>\n</table>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}